<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjh.yummy.dao.RestaurantDao" >

    <resultMap id="BaseResultMap" type="com.zjh.yummy.entity.Restaurant" >

        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="login_no" property="loginNo" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="cert_no" property="certNo" jdbcType="VARCHAR" />
        <result column="position_x" property="positionX" jdbcType="INTEGER" />
        <result column="position_y" property="positionY" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="head_img" property="headImg" jdbcType="VARCHAR" />
        <result column="type_id" property="typeId" jdbcType="INTEGER" />
        <result column="type_name" property="typeName" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="conditionList" item="item" separator="and" >
                ${item.condition} #{item.value}
            </foreach>
        </where>
    </sql>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select * from `restaurant` where `id` = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.zjh.yummy.entity.Restaurant" >
        insert into `restaurant` (`id`,`login_no`,`password`,`cert_no`,`position_x`,`position_y`,`name`,`head_img`,`type_id`,`type_name`,`address`,`status`)
        values (#{id,jdbcType=INTEGER},#{loginNo,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{certNo,jdbcType=VARCHAR},#{positionX,jdbcType=INTEGER},#{positionY,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{headImg,jdbcType=VARCHAR},#{typeId,jdbcType=INTEGER},#{typeName,jdbcType=VARCHAR},#{address,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR})
    </insert>

    <delete id="delete" parameterType="java.lang.Integer" >
        delete from `restaurant` where `id` = #{id,jdbcType=INTEGER}
    </delete>

    <update id="update" parameterType="com.zjh.yummy.entity.Restaurant" >
        update `restaurant`
        <set >
            <if test="loginNo != null" >
                `login_no` = #{loginNo,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="certNo != null" >
                `cert_no` = #{certNo,jdbcType=VARCHAR},
            </if>
            <if test="positionX != null" >
                `position_x` = #{positionX,jdbcType=INTEGER},
            </if>
            <if test="positionY != null" >
                `position_y` = #{positionY,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null" >
                `head_img` = #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null" >
                `type_id` = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="typeName != null" >
                `type_name` = #{typeName,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                `address` = #{address,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                `status` = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where `id` = #{id,jdbcType=INTEGER}
    </update>

    <select id="list" resultMap="BaseResultMap" parameterType="com.zjh.yummy.common.db.SimpleQuery" >
        select * from `restaurant`
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="order != null and sort != null" >
            order by `${sort}` ${order}
        </if>
        <if test="offset != null and limit !=null" >
            limit ${offset},${limit}
        </if>
    </select>

    <select id="count" parameterType="com.zjh.yummy.common.db.SimpleQuery" resultType="java.lang.Integer" >
        select count(*) from `restaurant`
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <select id="listByJoin" resultMap="BaseResultMap" parameterType="com.zjh.yummy.common.db.SimpleQuery" >
        select * from `restaurant`
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="order != null and sort != null" >
            order by `${sort}` ${order}
        </if>
        <if test="offset != null and limit !=null" >
            limit ${offset},${limit}
        </if>
    </select>

    <select id="countByJoin" parameterType="com.zjh.yummy.common.db.SimpleQuery" resultType="java.lang.Integer" >
        select count(*) from `restaurant`
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

</mapper>